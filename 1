#include <stdio.h>
#include<stdlib.h>
struct queue{
    int size;
    int f;
    int r;
    int*arr;
};

int isfull(struct queue*q){
    if((q->r+1)%q->size==q->f)
        return 1;
         return 0;
    }
    
    
    int isempty(struct queue*q){
    if(q->r==q->f)
        return 1;
         return 0;
    }

void enqueue(struct queue*q,int val){
    if(isfull(q)){printf("queue is full");}
    else{
        q->r=(q->r+1)%q->size;
        q->arr[q->r]=val;
        printf("enqueue %d\n",val);
        
    }
}
int dequeue(struct queue*q){int val=0;
    if(isempty(q)){printf("queue is empty");}
    else{//int val=0;
        q->f=(q->f+1)%q->size;
    val=q->arr[q->f];
      
        
    }return val;
}




int main(){
    struct queue *q=(struct queue*)malloc(sizeof(struct queue));
    q->size = 4;
    q->f = q->r = -1;
    q->arr = (int*) malloc(q->size*sizeof(int));
    
    // Enqueue few elements
    enqueue(q, 12);
    enqueue(q, 15);
    enqueue(q, 1); 
    printf("Dequeuing element %d\n", dequeue(q));
    printf("Dequeuing element %d\n", dequeue(q));
    printf("Dequeuing element %d\n", dequeue(q)); 
    enqueue(q, 45);
    enqueue(q, 45);
    enqueue(q, 45);
 
    if(isempty(q)){
        printf("Queue is empty\n");
    }
    if(isfull(q)){
        printf("Queue is full\n");
    }
 
    return 0;
}
